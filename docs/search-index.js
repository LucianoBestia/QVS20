var searchIndex={};
searchIndex["qvs20"] = {"doc":"QVS20 - Modern replacement for csv for the year 2020","i":[[3,"ReaderForQvs20","qvs20","ReaderForQvs20",null,null],[12,"input","","reference to the string (no allocation), but as [u8] for…",0,null],[12,"cursor_state","","where is the cursor now",0,null],[12,"cursor_pos","","cursor position",0,null],[12,"file_name_for_error_handling","","file_name for error handling",0,null],[12,"last_new_line_cursor_pos","","last new line cursor_pos",0,null],[12,"row","","row pos",0,null],[3,"Table","","The Table type contains TableSchema and TableRows.",null,null],[12,"schema","","schema",1,null],[12,"table_rows","","rows of data",1,null],[3,"TableRows","","",null,null],[12,"rows","","vector of rows. Can be empty.",2,null],[12,"table_name","","",2,null],[12,"active_row","","index 0 for first row",2,null],[12,"active_column","","index 0 for first column",2,null],[12,"row_delimiter","","row delimiter",2,null],[12,"sub_table_row_delimiter","","sub table row delimiter",2,null],[3,"TableSchema","","",null,null],[12,"table_name","","Schema 1st row - table name",3,null],[12,"table_description","","",3,null],[12,"data_types","","Schema 2nd row - data types",3,null],[12,"sub_table_schemas","","Schema 3rd row - SubTable schema",3,null],[12,"additional_properties","","Schema 4th row - additional properties as strings",3,null],[12,"column_names","","Schema 5th row - column names, the last schema row",3,null],[12,"active_row","","index 0 for first row",3,null],[12,"active_column","","active column",3,null],[12,"row_delimiter","","row_delimiter",3,null],[12,"sub_table_row_delimiter","","sub table row delimiter",3,null],[3,"WriterForQvs20","","",null,null],[12,"output","","",4,null],[12,"schema","","",4,null],[12,"column","","",4,null],[12,"row_delimiter","","",4,null],[4,"Qvs20Error","","",null,null],[13,"Error","","",5,null],[12,"msg","qvs20::Qvs20Error","",6,null],[5,"remove_src_loc","qvs20","src_loc is changing every time I edit the code then all…",null,[[["qvs20error"]],["string"]]],[0,"qvs20_reader_mod","","",null,null],[3,"REGEX_SRC_LOC","qvs20::qvs20_reader_mod","",null,null],[12,"__private_field","","",7,null],[3,"ReaderForQvs20","","ReaderForQvs20",null,null],[12,"input","","reference to the string (no allocation), but as [u8] for…",0,null],[12,"cursor_state","","where is the cursor now",0,null],[12,"cursor_pos","","cursor position",0,null],[12,"file_name_for_error_handling","","file_name for error handling",0,null],[12,"last_new_line_cursor_pos","","last new line cursor_pos",0,null],[12,"row","","row pos",0,null],[4,"Qvs20Error","","",null,null],[13,"Error","","",5,null],[12,"msg","qvs20::qvs20_reader_mod::Qvs20Error","",6,null],[4,"CursorState","qvs20::qvs20_reader_mod","internal enum",null,null],[13,"StartOfField","","start of file",8,null],[13,"InsideRowDelimiter","","row_delimiter",8,null],[13,"InsideOfField","","inside of field  ",8,null],[13,"OutsideOfField","","outside of field",8,null],[13,"EndOfFile","","reached normal end of file",8,null],[13,"StartSubTable","","Start sub_table",8,null],[13,"EndSubTable","","End sub_table",8,null],[4,"Token","","the returned Token from the iterator",null,null],[13,"Field","","field content - not unescaped  ",9,null],[13,"RowDelimiter","","row delimiter  ",9,null],[13,"StartSubTable","","Start sub_table",9,null],[13,"EndSubTable","","End sub_table",9,null],[5,"remove_src_loc","","src_loc is changing every time I edit the code then all…",null,[[["qvs20error"]],["string"]]],[11,"new","qvs20","Constructor. String (but in [u8] form) is immutably…",0,[[],["readerforqvs20"]]],[11,"error_pos","","errors msg have file_name:row:column position",0,[[["self"]],["string"]]],[11,"find_u8_from","","low level - find u8 from pos_cursor",0,[[["usize"],["u8"]],[["usize"],["option",["usize"]]]]],[11,"peek_next_is_not_eof","","peek if next character will be eof",0,[[["self"]],["bool"]]],[11,"peek_next_is_not_end_of_sub_table","","peek if next character will be end of sub_table",0,[[["self"]],["bool"]]],[11,"unescape","","unescape the qvs20 special 6 characters \\ Backslash…",0,[[],[["result",["string","qvs20error"]],["qvs20error"],["string"]]]],[11,"next_string","","get next token and convert to string",0,[[["self"]],[["result",["string","qvs20error"]],["qvs20error"],["string"]]]],[11,"next_integer","","get next token and convert to integer",0,[[["self"]],[["i64"],["result",["i64","qvs20error"]],["qvs20error"]]]],[11,"next_row_delimiter","","get next row_delimiter",0,[[["self"]],[["result",["qvs20error"]],["qvs20error"]]]],[0,"qvs20_table_mod","","The table structure is very flexible, because it is…",null,null],[3,"Table","qvs20::qvs20_table_mod","The Table type contains TableSchema and TableRows.",null,null],[12,"schema","","schema",1,null],[12,"table_rows","","rows of data",1,null],[11,"from_qvs20_str_with_schema","qvs20","create a table object in memory from a qvs20 format string",1,[[["str"]],[["table"],["result",["table","qvs20error"]],["qvs20error"]]]],[0,"qvs20_table_rows_mod","","The table structure is very flexible, because it is…",null,null],[3,"TableRows","qvs20::qvs20_table_rows_mod","",null,null],[12,"rows","","vector of rows. Can be empty.",2,null],[12,"table_name","","",2,null],[12,"active_row","","index 0 for first row",2,null],[12,"active_column","","index 0 for first column",2,null],[12,"row_delimiter","","row delimiter",2,null],[12,"sub_table_row_delimiter","","sub table row delimiter",2,null],[3,"Row","","",null,null],[12,"values","","",10,null],[4,"Value","","",null,null],[13,"String","","",11,null],[13,"Integer","","",11,null],[13,"Decimal","","",11,null],[13,"Float","","",11,null],[13,"Bool","","",11,null],[13,"DateTimeFixedOffset","","",11,null],[13,"Date","","",11,null],[13,"Time","","",11,null],[13,"SubTable","","",11,null],[11,"rows_from_qvs20_str","qvs20","rows from separate file than schema",2,[[["str"],["tableschema"]],[["qvs20error"],["tablerows"],["result",["tablerows","qvs20error"]]]]],[11,"while_table_rows_1st_row_table_name","","if Table_rows is in separate file, than this 1st row:…",2,[[["self"],["readerforqvs20"],["tableschema"]],[["option",["result"]],["result",["qvs20error"]]]]],[11,"append_data_rows","","internal append data to table after schema",2,[[["self"],["readerforqvs20"],["tableschema"]],[["result",["qvs20error"]],["qvs20error"]]]],[11,"while_append_one_data_row","","data row Option::None means end of the row",2,[[["self"],["readerforqvs20"],["tableschema"]],[["option",["result"]],["result",["qvs20error"]]]]],[11,"from_utf8_to_value","","for all types except sub_table",2,[[["tableschema"],["self"]],[["result",["value","qvs20error"]],["value"],["qvs20error"]]]],[11,"from_u8_to_string","","",2,[[],[["result",["string","qvs20error"]],["qvs20error"],["string"]]]],[11,"from_u8_to_i64","","",2,[[],[["i64"],["result",["i64","qvs20error"]],["qvs20error"]]]],[11,"from_u8_to_decimal","","",2,[[],[["qvs20error"],["result",["decimal","qvs20error"]],["decimal"]]]],[11,"from_u8_to_f64","","",2,[[],[["f64"],["result",["f64","qvs20error"]],["qvs20error"]]]],[11,"from_u8_to_bool","","",2,[[],[["result",["bool","qvs20error"]],["qvs20error"],["bool"]]]],[11,"from_u8_to_datetime","","rfc3339: 2014-11-28T21:00:09.123456+09:00",2,[[],[["result",["datetime","qvs20error"]],["datetime",["fixedoffset"]],["qvs20error"]]]],[11,"from_u8_to_date","","ISO 8601: 2014-11-28  no time zone. NaiveDate",2,[[],[["naivedate"],["result",["naivedate","qvs20error"]],["qvs20error"]]]],[11,"from_u8_to_time","","ISO 8601: 23:59:59.123456  no time zone. NaiveTime",2,[[],[["qvs20error"],["result",["naivetime","qvs20error"]],["naivetime"]]]],[0,"qvs20_table_schema_mod","","The table structure is very flexible, because it is…",null,null],[3,"TableSchema","qvs20::qvs20_table_schema_mod","",null,null],[12,"table_name","","Schema 1st row - table name",3,null],[12,"table_description","","",3,null],[12,"data_types","","Schema 2nd row - data types",3,null],[12,"sub_table_schemas","","Schema 3rd row - SubTable schema",3,null],[12,"additional_properties","","Schema 4th row - additional properties as strings",3,null],[12,"column_names","","Schema 5th row - column names, the last schema row",3,null],[12,"active_row","","index 0 for first row",3,null],[12,"active_column","","active column",3,null],[12,"row_delimiter","","row_delimiter",3,null],[12,"sub_table_row_delimiter","","sub table row delimiter",3,null],[4,"DataType","","",null,null],[13,"String","","",12,null],[13,"Integer","","",12,null],[13,"Decimal","","",12,null],[13,"Float","","",12,null],[13,"Bool","","",12,null],[13,"DateTimeFixedOffset","","",12,null],[13,"Date","","",12,null],[13,"Time","","",12,null],[13,"SubTable","","",12,null],[4,"ValueForSchema","","",null,null],[13,"String","","",13,null],[13,"TableSchema","","",13,null],[11,"new_simple_strings","qvs20","a simple table with all Strings and automatic column_names",3,[[["usize"]],["tableschema"]]],[11,"schema_from_qvs20_str","","create a Schema object in memory from a qvs20 format…",3,[[["str"]],[["result",["tableschema","qvs20error"]],["tableschema"],["qvs20error"]]]],[11,"read_schema","","create a table schema in memory from a qvs20 format string",3,[[["self"],["readerforqvs20"]],[["result",["qvs20error"]],["qvs20error"]]]],[11,"active_row_str","","",3,[[["self"]],["string"]]],[11,"read_row_schema_1st_row_table_name_and_description","","Schema 1st row: table name, description and row_delimiter…",3,[[["self"],["readerforqvs20"]],[["result",["qvs20error"]],["qvs20error"]]]],[11,"read_row_schema_2nd_row_data_types","","Schema 2nd row: data types",3,[[["self"],["readerforqvs20"]],[["result",["qvs20error"]],["qvs20error"]]]],[11,"read_row_schema_3rd_row_sub_table_schemas","","Schema 3rd row - sub tables schema",3,[[["self"],["readerforqvs20"]],[["result",["qvs20error"]],["qvs20error"]]]],[11,"read_row_schema_4th_row_additional_properties","","Schema 4th row - additional properties",3,[[["self"],["readerforqvs20"]],[["result",["qvs20error"]],["qvs20error"]]]],[11,"read_row_schema_5th_row_column_names","","Schema 5th row - column names",3,[[["self"],["readerforqvs20"]],[["result",["qvs20error"]],["qvs20error"]]]],[11,"read_field_in_row","","read field in row, returns ValueForSchema: variants String…",3,[[["self"],["readerforqvs20"]],[["result",["valueforschema","qvs20error"]],["option",["result"]]]]],[0,"qvs20_writer_mod","","",null,null],[3,"WriterForQvs20","qvs20::qvs20_writer_mod","",null,null],[12,"output","","",4,null],[12,"schema","","",4,null],[12,"column","","",4,null],[12,"row_delimiter","","",4,null],[11,"new","qvs20","",4,[[["tableschema"],["string"]],["self"]]],[11,"write_schema","","",4,[[["self"]]]],[11,"write_table_rows","","",4,[[["self"],["tablerows"]]]],[11,"write_table","","",4,[[["self"],["tablerows"]]]],[11,"write_delimiter","","",4,[[["self"]]]],[11,"write_string","","write a field of type String",4,[[["str"],["self"]]]],[11,"write_integer","","write a field of type integer",4,[[["i64"],["self"]]]],[11,"write_decimal","","write a field of type decimal",4,[[["self"],["decimal"]]]],[11,"write_float","","write a field of type float",4,[[["self"],["f64"]]]],[11,"write_sub_table_schema","","write a sub table schema write a field of type String",4,[[["self"],["tableschema"]]]],[11,"push_escaped_qvs20_str","","escape the 6 special characters \\, [, ], \\n, \\r, \\t all…",4,[[["str"],["self"]]]],[14,"s","","short macro `s!()` for &str.to_string or format!().…",null,null],[14,"err_trim","","trim start of error for concatenation",null,null],[14,"src_loc","","",null,null],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"into_iter","","",0,[[],["i"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,[[["self"],["t"]]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_string","","",5,[[["self"]],["string"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"from","qvs20::qvs20_reader_mod","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"from","qvs20::qvs20_table_rows_mod","",10,[[["t"]],["t"]]],[11,"into","","",10,[[],["u"]]],[11,"to_owned","","",10,[[["self"]],["t"]]],[11,"clone_into","","",10,[[["self"],["t"]]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"try_into","","",10,[[],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"type_id","","",10,[[["self"]],["typeid"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"from","qvs20::qvs20_table_schema_mod","",12,[[["t"]],["t"]]],[11,"into","","",12,[[],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,[[["self"],["t"]]]],[11,"to_string","","",12,[[["self"]],["string"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"try_into","","",12,[[],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"type_id","","",12,[[["self"]],["typeid"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"into","","",13,[[],["u"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"try_into","","",13,[[],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"type_id","","",13,[[["self"]],["typeid"]]],[11,"next","qvs20","Reads the next token. Return None when EndOfFile. Can…",0,[[["self"]],[["option",["result"]],["result",["token","qvs20error"]]]]],[11,"clone","qvs20::qvs20_reader_mod","",9,[[["self"]],["token"]]],[11,"clone","qvs20","",1,[[["self"]],["table"]]],[11,"clone","","",2,[[["self"]],["tablerows"]]],[11,"clone","qvs20::qvs20_table_rows_mod","",10,[[["self"]],["row"]]],[11,"clone","","",11,[[["self"]],["value"]]],[11,"clone","qvs20","",3,[[["self"]],["tableschema"]]],[11,"clone","qvs20::qvs20_table_schema_mod","",12,[[["self"]],["datatype"]]],[11,"default","qvs20","",0,[[],["readerforqvs20"]]],[11,"default","qvs20::qvs20_reader_mod","",8,[[],["self"]]],[11,"default","qvs20","",1,[[],["table"]]],[11,"default","","",2,[[],["tablerows"]]],[11,"default","qvs20::qvs20_table_rows_mod","",10,[[],["row"]]],[11,"default","","",11,[[],["self"]]],[11,"default","qvs20","",3,[[],["tableschema"]]],[11,"eq","qvs20::qvs20_reader_mod","",9,[[["token"],["self"]],["bool"]]],[11,"ne","","",9,[[["token"],["self"]],["bool"]]],[11,"eq","qvs20::qvs20_table_schema_mod","",12,[[["self"],["datatype"]],["bool"]]],[11,"deref","qvs20::qvs20_reader_mod","",7,[[["self"]],["regex"]]],[11,"fmt","qvs20","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","qvs20::qvs20_reader_mod","",9,[[["formatter"],["self"]],["result"]]],[11,"fmt","qvs20","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","qvs20::qvs20_table_rows_mod","",10,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","qvs20","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","qvs20::qvs20_table_schema_mod","",12,[[["formatter"],["self"]],["result"]]],[11,"fmt","qvs20","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","qvs20::qvs20_table_schema_mod","",12,[[["self"],["formatter"]],[["error"],["result",["error"]]]]],[11,"from_str","","",12,[[["str"]],[["datatype"],["result",["datatype"]]]]],[11,"initialize","qvs20::qvs20_reader_mod","",7,[[["self"]]]]],"p":[[3,"ReaderForQvs20"],[3,"Table"],[3,"TableRows"],[3,"TableSchema"],[3,"WriterForQvs20"],[4,"Qvs20Error"],[13,"Error"],[3,"REGEX_SRC_LOC"],[4,"CursorState"],[4,"Token"],[3,"Row"],[4,"Value"],[4,"DataType"],[4,"ValueForSchema"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);